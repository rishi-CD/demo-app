pipeline {
    agent any
    tools {
        maven '3.9.9'
    }
    stages {
        stage('Verify Tools') {
            steps {
                echo "Verifying Java, Maven, Git, and Docker versions"
                bat """
                    echo ===== Java Version =====
                    java -version

                    echo ===== Maven Version =====
                    mvn -v

                    echo ===== Git Version =====
                    git --version

                    echo ===== Docker Version =====
                    docker --version
                """
            }
        }

        stage('Compile and Clean') {
            steps {
                bat 'mvn clean compile'
            }
        }

        stage('Package') {
            steps {
                bat 'mvn package'
            }
        }

        stage('Docker Cleanup') {
            steps {
                echo "Cleaning up old Docker containers and images"
                bat """
                    for /f "tokens=*" %%i in ('docker ps -q -f "publish=8080"') do (
                        echo Stopping old container: %%i
                        docker stop %%i
                        docker rm %%i
                    )

                    for /f "tokens=*" %%i in ('docker images -q rishi-CD/demo-app') do (
                        echo Removing old image: %%i
                        docker rmi -f %%i
                    )
                """
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Building Docker image"
                bat "docker build -t rishi-CD/demo-app:%BUILD_NUMBER% ."
            }
        }

        stage('Docker Login') {
            steps {
                withCredentials([string(credentialsId: 'dockerId1', variable: 'Dockerpwd')]) {
                    bat "docker login -u rishi-CD -p %Dockerpwd%"
                }
            }
        }

        stage('Docker Push') {
            steps {
                bat "docker push rishi-CD/demo-app:%BUILD_NUMBER%"
            }
        }

        stage('Docker Deploy') {
            steps {
                bat "docker run -itd -p 8088:8088 rishi-CD/demo-app:%BUILD_NUMBER%"
            }
        }

        stage('Archive Artifacts') {
            steps {
                archiveArtifacts '**/target/*.jar'
            }
        }
    }
}
